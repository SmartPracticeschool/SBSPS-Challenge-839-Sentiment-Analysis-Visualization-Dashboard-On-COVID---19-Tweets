{"version":3,"sources":["context/Context.js","pages/Admin/Login/Login.js","pages/Admin/DashBoard/components/Header/Header.js","pages/Admin/DashBoard/components/Header/Modal/ShowHashTags.js","pages/Admin/DashBoard/components/Header/Modal/RadarModal.js","pages/Admin/DashBoard/components/Maps/BasicMap.js","pages/Admin/DashBoard/components/Header/Modal/ShowMap.js","pages/Admin/DashBoard/Tabs/Overview.js","constants/Constants.js","pages/Admin/DashBoard/Tabs/ShowTweets.js","pages/Admin/DashBoard/Tabs/History.js","pages/Admin/DashBoard/Home.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","Login","handleChange","e","setState","target","name","value","login","loading","state","email","password","context","sleep","then","window","location","emailError","passwordError","Container","Row","className","Col","md","xs","src","alt","Form","Text","this","Control","type","onChange","placeholder","Button","onClick","icon","faChevronRight","href","Component","contextType","Header","Navbar","sticky","faHashtag","Toggle","aria-controls","Collapse","id","faSearch","faBars","ShowHashTags","hashtags","todayTweets","Modal","show","props","isOpen","onHide","handleClose","closeButton","Title","Body","Object","keys","map","key","index","Badge","variant","Footer","RadarModal","size","data","Map","_updateViewport","viewport","width","height","latitude","longitude","zoom","popupInfo","tipSize","anchor","markerData","position","Longitude","Latitude","onMouseLeave","closeOnClick","negative","positive","console","log","onViewportChange","mapboxApiAccessToken","mapStyle","color","marker","undefined","faMapMarkerAlt","style","fontSize","onMouseEnter","renderPopup","ShowMap","OverView","showMap","isMapModalOpen","showHashTagsModal","isShowHashTagsModalOpen","showRadarModal","isRadarModalOpen","results","finalScore","finalLabel","finalLabelColor","overAllScore","Math","abs","overAllSentimentScore","overAllScoreLabel","overAllSentimentLabel","random","recentTweetsKey","length","emotions","overAllEmotions","overAllResults","totalTweetCount","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","sadness","toFixed","joy","fear","anger","disgust","randomColors","pointBackgroundColor","pointHoverBorderColor","pointBorderColor","pointHoverBackgroundColor","dataset","result","emotion","document","push","radarChartData","date","Date","split","needleHeightRatio","segmentColors","currentValueText","customSegmentLabels","ringWidth","needleTransitionDuration","needleTransition","needleColor","textColor","faSmile","faSadTear","faMeh","title","faSmileBeam","faAngry","faRetweet","faUserAlt","Table","striped","bordered","hover","slice","tweet","screenName","text","substring","prediction","topInfluencers","influencer","mentions","ShowTweets","formatDate","dateText","getTweetsByDate","axios","post","Constants","res","search","sentiment","tempTweets","filteredData","val","toLowerCase","indexOf","trim","searchResults","searchResultsIsOpen","renderTable","tableData","getDate","today","month","getMonth","toString","day","getFullYear","Label","InputGroup","FormControl","as","History","getAllData","get","overAllData","renderData","sadnessData","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","joyData","angerData","disgustData","fearData","faChartBar","Home","getLiveTweets","updateTodayTweets","getCoordinatesForLocations","tempData","locations","setMarkerData","Tab","defaultActiveKey","Nav","Item","Link","eventKey","faInfoCircle","faBalanceScale","Content","Pane","App","milliseconds","Promise","resolve","setTimeout","Provider","path","exact","component","AdminLogin","AdminHome","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.136a21b7.chunk.js","sourcesContent":["import React from \"react\";\nconst Context = React.createContext();\nexport default Context;\n","import React from \"react\";\nimport \"./Login.css\";\n\n// Bootstrap Components\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\n\n// Font Awesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\n\n// Contxt\nimport Context from \"../../../context/Context\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      emailError: \"\",\n      passwordError: \"\",\n      loading: false,\n    };\n  }\n\n  // update values to the state\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // login action\n  login = () => {\n    this.setState({ loading: true });\n    if (this.state.email !== \"\" && this.state.password !== \"\") {\n      this.context.sleep(2000).then(() => {\n        window.location = \"http://localhost:3000/admin/home\";\n      });\n    } else {\n      this.setState({\n        emailError: \"Enter the details\",\n        passwordError: \"Enter the details\",\n        loading: false,\n      });\n    }\n  };\n\n  // get user details using user id\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <Row className=\"mt-4\">\n            <Col md={3}></Col>\n            <Col xs={12} md={6} className=\"border border-muted p-5\">\n              <center>\n                <img\n                  src=\"https://cdn-images-1.medium.com/max/1000/1*ZU1eWct801yP-QpUJOaI6Q.png\"\n                  className=\"w-25 mt-5\"\n                  alt=\"\"\n                />\n\n                <h5 className=\"mt-3 text-dark\">Welcome Admin !</h5>\n                <p className=\"text-secondary small\">\n                  Sign in with your email ID or phone number\n                </p>\n              </center>\n\n              {/* Form */}\n              <div className=\"mt-5 m-2 loginForm\">\n                <Form.Text className=\"text-danger\">\n                  {this.state.emailError}\n                </Form.Text>\n                <Form.Control\n                  type=\"text\"\n                  onChange={this.handleChange}\n                  name=\"email\"\n                  placeholder=\"Your Email\"\n                  className=\"mb-3 input\"\n                ></Form.Control>\n\n                <Form.Text className=\"text-danger\">\n                  {this.state.passwordError}\n                </Form.Text>\n                <Form.Control\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Your Password\"\n                  className=\"mb-3 input\"\n                  onChange={this.handleChange}\n                ></Form.Control>\n\n                <Button\n                  className={`loginButton btn-block ${\n                    this.state.loading ? \"disabled\" : \"\"\n                  }`}\n                  onClick={this.login}\n                >\n                  {this.state.loading ? \"Loading\" : \"Login in to dashboard\"}\n\n                  <FontAwesomeIcon icon={faChevronRight} className=\"ml-2\" />\n                </Button>\n              </div>\n\n              {/*  options */}\n              <div className=\"mt-3\">\n                <Row>\n                  <Col>\n                    <button className=\"btn btn-link\">\n                      <p className=\"small\">Forgot Password ?</p>\n                    </button>\n                  </Col>\n                  <Col className=\"d-flex justify-content-end align-items-center\">\n                    <p className=\"small\">\n                      Dont have an account !{\" \"}\n                      <a\n                        href=\"/supplierRegister\"\n                        className=\"small text-primary\"\n                      >\n                        Get Started\n                      </a>\n                    </p>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n            <Col md={3}></Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\nLogin.contextType = Context;\nexport default Login;\n","import React from \"react\";\n\n// Bootstrap components\nimport { Navbar, Form } from \"react-bootstrap\";\n\n// Stylesheet\nimport \"./Header.css\";\n\n// FontAwesome Icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faSearch, faHashtag } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div>\n        <Navbar className=\"navbar\" sticky=\"top\">\n          <div className=\"navbar-bg-light\">\n            <h5 className=\"brandName\">\n              <FontAwesomeIcon icon={faHashtag} className=\" mr-2\" />\n              TWEEZY\n            </h5>\n          </div>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\n          {/* Right Side content */}\n          <Navbar.Collapse\n            className=\"justify-content-end mr-5\"\n            id=\"responsive-navbar-nav\"\n          >\n            <div>\n              <FontAwesomeIcon icon={faSearch} className=\"inputIcon\" />\n              <Form.Control\n                type=\"search\"\n                className=\"searchBar mr-4\"\n                placeholder=\"Search\"\n              ></Form.Control>\n            </div>\n            <h5 className=\"recruiterName mr-3\">Saranraj</h5>\n            <FontAwesomeIcon icon={faBars} className=\"icon\" />\n          </Navbar.Collapse>\n\n          {/* <Navbar.Brand href=\"#home\"></Navbar.Brand> */}\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n\n// Bootstrap Components\nimport { Modal, Button, Row, Badge } from \"react-bootstrap\";\n\n// Context\nimport Context from \"../../../../../../context/Context\";\n\nclass ShowHashTags extends React.Component {\n  render() {\n    const hashtags = this.context.todayTweets.hashtags;\n    return (\n      <div>\n        <Modal show={this.props.isOpen} onHide={this.props.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Analyzed HashTags</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row className=\"ml-2 mr-2\">\n              {Object.keys(hashtags).map((key, index) => {\n                return (\n                  <span key={index} className=\"mr-5 mt-2\">\n                    {key + \" \"}\n                    <Badge variant=\"primary\">{hashtags[key]}</Badge>\n                  </span>\n                );\n              })}\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\">Close</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nShowHashTags.contextType = Context;\nexport default ShowHashTags;\n","import React from \"react\";\n\n// Bootstrap\nimport { Modal, Button } from \"react-bootstrap\";\n\n// Charts\nimport { Radar } from \"react-chartjs-2\";\n\nclass RadarModal extends React.Component {\n  render() {\n    return (\n      <Modal show={this.props.isOpen} onHide={this.props.handleClose} size=\"lg\">\n        <Modal.Header closeButton>\n          <Modal.Title>Variantions Between Time Intervals</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Radar data={this.props.data} />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default RadarModal;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport ReactMapGL, { NavigationControl, Marker, Popup } from \"react-map-gl\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSearch,\n  faMarker,\n  faMapMarkerAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Context\nimport Context from \"../../../../../context/Context\";\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1Ijoic2hyaXNhcmFucmFqIiwiYSI6ImNrOHlhanJoeDAwODkza2w3cGpsMGw5YjEifQ.GuuUnBze_nbTo6raeeYZ1g\"; // Set your mapbox token here\n\nclass Map extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      viewport: {\n        width: 400,\n        height: 400,\n        latitude: 20.5937,\n        longitude: 78.9629,\n        zoom: 3,\n      },\n      popupInfo: null,\n    };\n  }\n\n  renderPopup(key) {\n    return (\n      this.state.popupInfo && (\n        <Popup\n          tipSize={5}\n          anchor=\"bottom-right\"\n          longitude={this.context.markerData[key].position.Longitude}\n          latitude={this.context.markerData[key].position.Latitude}\n          onMouseLeave={() => this.setState({ popupInfo: null })}\n          closeOnClick={true}\n        >\n          <p>\n            <strong>{this.context.markerData[key].negative}</strong>\n            <br />\n            Positive:{this.context.markerData[key].positive}\n          </p>\n        </Popup>\n      )\n    );\n  }\n  _updateViewport = (viewport) => {\n    this.setState({ viewport });\n  };\n\n  render() {\n    console.log(this.context.markerData);\n    const { viewport } = this.state;\n    return (\n      <div>\n        <ReactMapGL\n          {...viewport}\n          onViewportChange={this._updateViewport}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n          width=\"55vw\"\n          height=\"30vw\"\n          mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n        >\n          <div className=\"nav\">\n            <NavigationControl\n              onViewportChange={(viewport) => this.setState({ viewport })}\n            />\n            {Object.keys(this.context.markerData).map((key, index) => {\n              const marker = this.context.markerData[key];\n              if (marker.position !== undefined) {\n                var color;\n                if (marker.positive > marker.negative) color = \"text-success\";\n                else if (marker.negative > marker.positive)\n                  color = \"text-danger\";\n                else color = \"text-warning\";\n                return (\n                  <div key={key}>\n                    <Marker\n                      longitude={marker.position.Longitude}\n                      latitude={marker.position.Latitude}\n                    >\n                      <FontAwesomeIcon\n                        icon={faMapMarkerAlt}\n                        className={`${color}`}\n                        style={{ fontSize: 20 }}\n                        onMouseEnter={() => this.setState({ popupInfo: true })}\n                        onMouseLeave={() => this.setState({ popupInfo: null })}\n                      />\n                    </Marker>\n                    {this.renderPopup(key)}\n                  </div>\n                );\n              }\n            })}\n            {/* {markerData.map((marker, index) => {\n              return (\n                <div key={index}>\n                  <Marker\n                    longitude={marker.position.Longitude}\n                    latitude={marker.position.Latitude}\n                  >\n                    <FontAwesomeIcon\n                      icon={faMapMarkerAlt}\n                      className=\"text-danger\"\n                      style={{ fontSize: 20 }}\n                      onMouseEnter={() => this.setState({ popupInfo: true })}\n                      onMouseLeave={() => this.setState({ popupInfo: null })}\n                    />\n                  </Marker>\n                  {this.renderPopup(index)}\n                </div>\n              );\n            })} */}\n          </div>\n        </ReactMapGL>\n      </div>\n    );\n  }\n}\nMap.contextType = Context;\nexport default Map;\n","import React from \"react\";\n\n// Bootstrap\nimport { Modal, Button } from \"react-bootstrap\";\n\n// Map\nimport Map from \"../../../components/Maps/BasicMap\";\n\nclass ShowMap extends React.Component {\n  render() {\n    return (\n      <Modal show={this.props.isOpen} onHide={this.props.handleClose} size=\"lg\">\n        <Modal.Header closeButton>\n          <Modal.Title>Map</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Map style={{ width: \"100%\" }} />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nexport default ShowMap;\n","import React from \"react\";\n\n// Bootstrap Components\nimport { Row, Col, Table, Button } from \"react-bootstrap\";\n\n// StyleSheet\nimport \"./style.css\";\n\nimport ReactSpeedometer from \"react-d3-speedometer\";\n\n// FontAwesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSmile,\n  faRetweet,\n  faHashtag,\n  faUserAlt,\n  faSadTear,\n  faSmileBeam,\n  faAngry,\n  faMeh,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Charts\nimport { HorizontalBar } from \"react-chartjs-2\";\n\n// Context\nimport Context from \"../../../../context/Context\";\nimport ShowHashTags from \"../components/Header/Modal/ShowHashTags\";\nimport RadarModal from \"../components/Header/Modal/RadarModal\";\nimport ShowMap from \"../components/Header/Modal/ShowMap\";\n\nclass OverView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isShowHashTagsModalOpen: false,\n      isRadarModalOpen: false,\n      isMapModalOpen: false,\n    };\n  }\n\n  showMap = () => {\n    this.setState({\n      isMapModalOpen: true,\n    });\n  };\n\n  showHashTagsModal = () => {\n    this.setState({\n      isShowHashTagsModalOpen: true,\n    });\n  };\n\n  showRadarModal = () => {\n    this.setState({\n      isRadarModalOpen: true,\n    });\n  };\n\n  render() {\n    if (this.context.todayTweets.results !== undefined) {\n      // Overall score calculation (out of 5)\n      var overAllScore = Math.abs(\n        this.context.todayTweets.overAllSentimentScore\n      );\n      var overAllScoreLabel = this.context.todayTweets.overAllSentimentLabel;\n\n      var finalScore;\n      var finalLabel;\n      var finalLabelColor;\n\n      if (\n        overAllScore >= 0.01 &&\n        overAllScore <= 0.5 &&\n        overAllScoreLabel === \"Negative\"\n      ) {\n        finalScore = Math.abs(overAllScore) * 2;\n        finalLabel = \"Negative\";\n        finalLabelColor = \"#c0392b\";\n      } else if (\n        overAllScore >= 0.06 &&\n        overAllScore <= 0.9 &&\n        overAllScoreLabel === \"Negative\"\n      ) {\n        finalScore = Math.abs(overAllScore) * 2;\n        finalLabel = \"Negative\";\n        finalLabelColor = \"#e74c3c\";\n      } else if (\n        overAllScore >= 0.01 &&\n        overAllScore <= 0.5 &&\n        overAllScoreLabel === \"Positive\"\n      ) {\n        finalScore = Math.abs(overAllScore) * 2 + 3;\n        finalLabel = \"Positive\";\n        finalLabelColor = \"#f1c40f\";\n      } else if (\n        overAllScore >= 0.06 &&\n        overAllScore <= 0.9 &&\n        overAllScoreLabel === \"Positive\"\n      ) {\n        finalScore = Math.abs(overAllScore) * 2 + 3;\n        finalLabel = \"Positive\";\n        finalLabelColor = \"#3498db\";\n      } else if (overAllScore === 0.0) {\n        finalScore = Math.random(0, 0.6) + 2;\n        finalLabelColor = \"#f39c12\";\n        finalLabel = \"Neutral\";\n      }\n\n      // Get the last item in the array of objects (recent tweets)\n      const recentTweetsKey = Object.keys(this.context.todayTweets.results)[\n        Object.keys(this.context.todayTweets.results).length - 1\n      ];\n      const emotions = this.context.todayTweets.overAllEmotions;\n      const results = this.context.todayTweets.overAllResults;\n\n      //Horizontal Chart Chart Data\n      const totalTweetCount = this.context.todayTweets.totalTweetCount;\n\n      const data = {\n        labels: [\"Sadness\", \"Joy\", \"Fear\", \"Anger\", \"Disgust\"],\n        datasets: [\n          {\n            label: \"Emotions\",\n            backgroundColor: \"rgba(255,99,132,0.2)\",\n            borderColor: \"rgba(255,99,132,1)\",\n            borderWidth: 1,\n            hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n            hoverBorderColor: \"rgba(255,99,132,1)\",\n            data: [\n              (emotions.sadness * 100).toFixed(0),\n              (emotions.joy * 100).toFixed(0),\n              (emotions.fear * 100).toFixed(0),\n              (emotions.anger * 100).toFixed(0),\n              (emotions.disgust * 100).toFixed(0),\n            ],\n          },\n        ],\n      };\n\n      const randomColors = [\n        {\n          backgroundColor: \"rgba(44, 62, 80,0.2)\",\n          borderColor: \"rgb(52, 73, 94)\",\n          pointBackgroundColor: \"rgb(52, 73, 94)\",\n          pointHoverBorderColor: \"rgba(179,181,198,1)\",\n        },\n        {\n          backgroundColor: \"rgba(255,99,132,0.2)\",\n          borderColor: \"rgba(255,99,132,1)\",\n          pointBackgroundColor: \"rgba(255,99,132,1)\",\n          pointBorderColor: \"#fff\",\n          pointHoverBackgroundColor: \"#fff\",\n          pointHoverBorderColor: \"rgba(255,99,132,1)\",\n        },\n        {\n          backgroundColor: \"rgba(41, 128, 185,0.2)\",\n          borderColor: \"rgb(52, 152, 219)\",\n          pointBackgroundColor: \"rgb(52, 152, 219)\",\n          pointBorderColor: \"#fff\",\n          pointHoverBackgroundColor: \"#fff\",\n          pointHoverBorderColor: \"rgba(255,99,132,1)\",\n        },\n      ];\n      var dataset = [];\n      {\n        Object.keys(this.context.todayTweets.results).map((key, index) => {\n          var data = this.context.todayTweets.results[key];\n          var result = {};\n          var emotions = data[0].emotion.document.emotion;\n          result[\"label\"] = key;\n          result[\"backgroundColor\"] = randomColors[index].backgroundColor;\n          result[\"borderColor\"] = randomColors[index].borderColor;\n          result[\"pointBackgroundColor\"] =\n            randomColors[index].pointBackgroundColor;\n          result[\"pointBorderColor\"] = \"#fff\";\n          result[\"pointHoverBackgroundColor\"] = \"#fff\";\n          result[\"pointHoverBorderColor\"] =\n            randomColors[index].pointHoverBackgroundColor;\n          result[\"data\"] = [\n            (emotions.sadness * 100).toFixed(0),\n            (emotions.joy * 100).toFixed(0),\n            (emotions.fear * 100).toFixed(0),\n            (emotions.anger * 100).toFixed(0),\n            (emotions.disgust * 100).toFixed(0),\n          ];\n          dataset.push(result);\n        });\n      }\n\n      const radarChartData = {\n        labels: [\"Sadness\", \"Joy\", \"Fear\", \"Anger\", \"Disgust\"],\n\n        datasets: dataset,\n      };\n\n      const date = Date().split(\" \");\n      return (\n        <div className=\"p-3\">\n          <Row>\n            <Col md={5}>\n              <div className=\"card\">\n                <div className=\"card-title\">\n                  <Row>\n                    <Col md={8}>\n                      <h5 className=\"ml-2 mt-1\">OVERALL SENTIMENT LEVEL</h5>\n                    </Col>\n\n                    <Col md={4} className=\"d-flex justify-content-end\">\n                      <p className=\"small text-primary cursor-pointer\">\n                        ({date[1] + \" \" + date[2] + \" \" + date[3]})\n                      </p>\n                    </Col>\n                  </Row>\n                </div>\n                <div className=\"card-content\">\n                  <Row>\n                    <Col>\n                      {/* Speedometer */}\n                      <ReactSpeedometer\n                        width={250}\n                        height={160}\n                        needleHeightRatio={0.8}\n                        value={finalScore * 200}\n                        segmentColors={[\n                          \"#c0392b\",\n                          \"#e74c3c\",\n                          \"#f39c12\",\n                          \"#f1c40f\",\n                          \"#3498db\",\n                        ]}\n                        currentValueText=\"\"\n                        customSegmentLabels={[\n                          {\n                            position: \"INSIDE\",\n                            color: \"#fff\",\n                          },\n                          {\n                            position: \"INSIDE\",\n                            color: \"#fff\",\n                          },\n                          {\n                            position: \"INSIDE\",\n                            color: \"#fff\",\n                          },\n                          {\n                            position: \"INSIDE\",\n                            color: \"#fff\",\n                          },\n                          {\n                            position: \"INSIDE\",\n                            color: \"#fff\",\n                          },\n                        ]}\n                        ringWidth={20}\n                        needleTransitionDuration={3333}\n                        needleTransition=\"easeElastic\"\n                        needleColor={\"#2c3e50\"}\n                        textColor={\"#fff\"}\n                      />\n                      <Row>\n                        <Col>\n                          <Button\n                            size=\"sm\"\n                            className=\"mr-2\"\n                            onClick={this.showRadarModal}\n                          >\n                            Show variations\n                          </Button>\n                          <Button size=\"sm\" onClick={this.showMap}>\n                            Open Map\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Col>\n                    <Col>\n                      <div className=\"score\">\n                        <h5>\n                          {finalLabel === \"Positive\" ? (\n                            <FontAwesomeIcon icon={faSmile} className=\"mr-2\" />\n                          ) : finalLabel === \"Negative\" ? (\n                            <FontAwesomeIcon\n                              icon={faSadTear}\n                              className=\"mr-2\"\n                            />\n                          ) : (\n                            <FontAwesomeIcon icon={faMeh} className=\"mr-2\" />\n                          )}\n                          {finalScore.toFixed(2)}\n                        </h5>\n                        <h6>Out of 5</h6>\n                        <h5\n                          className=\"final-score\"\n                          style={{ color: finalLabelColor }}\n                        >\n                          {finalLabel}\n                        </h5>\n                      </div>\n                    </Col>\n                  </Row>\n                </div>\n              </div>\n            </Col>\n            <Col>\n              <div className=\"card\">\n                <div className=\"card-title\">\n                  <h5>SENTIMENT BREAKDOWN</h5>\n                </div>\n                <div className=\"card-content piechart-container\">\n                  <HorizontalBar data={data} />\n                  {/* Emotions */}\n                  <Row className=\"mt-3\">\n                    <Col>\n                      <FontAwesomeIcon\n                        icon={faSadTear}\n                        style={{ color: \"#f39c12\" }}\n                        title=\"Sadness\"\n                        className=\"ml-3 mr-2 cursor-pointer\"\n                      />\n                      {\"-  \" + emotions.sadness.toFixed(2)}\n                      <FontAwesomeIcon\n                        icon={faSmileBeam}\n                        title=\"Joy\"\n                        className=\"mr-2 ml-3 text-success cursor-pointer\"\n                      />\n                      {\"-  \" + emotions.joy.toFixed(2)}\n                      <FontAwesomeIcon\n                        icon={faAngry}\n                        title=\"Anger\"\n                        className=\"mr-2 ml-3 text-danger cursor-pointer\"\n                      />\n                      {\"-  \" + emotions.anger.toFixed(2)}\n                    </Col>\n                  </Row>\n                </div>\n              </div>\n            </Col>\n            <Col>\n              <div className=\"card\">\n                <div className=\"card-title mb-0\">\n                  <center>\n                    <h5 className=\"mt-2\">\n                      <FontAwesomeIcon icon={faRetweet} className=\"mr-2\" />\n                      NUMBER OF TWEETS\n                    </h5>\n                    <h3>{this.context.todayTweets.totalTweetCount}</h3>\n                    <hr />\n                    <div\n                      onClick={this.showHashTagsModal}\n                      className=\"cursor-pointer\"\n                    >\n                      <h5>\n                        <FontAwesomeIcon icon={faHashtag} className=\"mr-2\" />\n                        NUMBER OF HASHTAGS\n                      </h5>\n                    </div>\n                    <h3>\n                      {Object.keys(this.context.todayTweets.hashtags).length}\n                    </h3>\n                    <hr />\n                    <h5>\n                      <FontAwesomeIcon icon={faUserAlt} className=\"mr-2\" />\n                      NUMBER OF USERS\n                    </h5>\n                    <h3>1300</h3>\n                  </center>\n                </div>\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <Col md={4}>\n              <h5 className=\"small font-weight-bold\">Recent Tweets</h5>\n              <Table striped bordered hover size=\"sm\" variant=\"dark\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Username</th>\n                    <th>Tweet</th>\n                    <th>Tone</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.context.todayTweets.results[recentTweetsKey]\n                    .slice(2, 7)\n                    .map((tweet, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>{index + 1}</td>\n                          <td>{tweet.screenName}</td>\n                          <td title={tweet.text}>\n                            {tweet.text.substring(0, 8) + \"...\"}\n                          </td>\n                          <td>{tweet.prediction}</td>\n                        </tr>\n                      );\n                    })}\n                </tbody>\n              </Table>\n            </Col>\n            <Col md={4}>\n              <h5 className=\"small font-weight-bold\">Top Influencers</h5>\n              <Table striped bordered hover size=\"sm\" variant=\"dark\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Username</th>\n                    <th>Tweets</th>\n                    <th>Likes</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.keys(this.context.todayTweets.topInfluencers)\n                    .slice(0, 5)\n                    .map((key, index) => {\n                      const influencer = this.context.todayTweets\n                        .topInfluencers;\n                      return (\n                        <tr key={key}>\n                          <td>{index + 1}</td>\n                          <td>{\"@\" + key}</td>\n                          <td>{influencer[key][\"tweetCount\"]}</td>\n                          <td>{influencer[key][\"favouriteCount\"]}</td>\n                        </tr>\n                      );\n                    })}\n                </tbody>\n              </Table>\n            </Col>\n            <Col>\n              <h5 className=\"small font-weight-bold\">Top Mentions</h5>\n              <Table striped bordered hover size=\"sm\" variant=\"dark\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Username</th>\n                    <th>No of mentions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.keys(this.context.todayTweets.mentions)\n                    .slice(0, 5)\n                    .map((key, index) => {\n                      const mentions = this.context.todayTweets.mentions;\n                      return (\n                        <tr key={key}>\n                          <td>{index + 1}</td>\n                          <td>{\"@\" + key}</td>\n                          <td>{mentions[key]}</td>\n                        </tr>\n                      );\n                    })}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n\n          {/* Modal */}\n          <ShowHashTags\n            isOpen={this.state.isShowHashTagsModalOpen}\n            handleClose={() => {\n              this.setState({\n                isShowHashTagsModalOpen: false,\n              });\n            }}\n          />\n\n          {/* Radar Chart Modal */}\n          <RadarModal\n            data={radarChartData}\n            isOpen={this.state.isRadarModalOpen}\n            handleClose={() => {\n              this.setState({\n                isRadarModalOpen: false,\n              });\n            }}\n          />\n\n          {/* Map Modal */}\n          <ShowMap\n            isOpen={this.state.isMapModalOpen}\n            handleClose={() => {\n              this.setState({\n                isMapModalOpen: false,\n              });\n            }}\n          />\n        </div>\n      );\n    } else {\n      return <p>Loading</p>;\n    }\n  }\n}\nOverView.contextType = Context;\nexport default OverView;\n","export default {\n  BASE_URL: \"http://localhost:3000\",\n  HERE_MAPS_API_KEY: \"Omfb3D_6gnrF9h7r_TsQAyFJrj47fZcbqIeN41Uxxxw\",\n  HERE_MAPS_APP_ID: \"xPIcFc8xn5PLiheKwn5p\",\n  HERE_MAPS_APP_CODE: \"8f8NlzUfaHYVJuitDFoDgA\",\n  FLASK_SERVER_ENDPOINT: \"\",\n};\n","import React from \"react\";\n\n// Bootstrap\nimport {\n  FormControl,\n  InputGroup,\n  Button,\n  Row,\n  Col,\n  Table,\n  Form,\n} from \"react-bootstrap\";\n\n// Stylesheet\nimport \"./style.css\";\n\n// Context\nimport Context from \"../../../../context/Context\";\n\n// FontAwesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\n// Constants\nimport Constants from \"../../../../constants/Constants\";\n\n// Axios\nimport axios from \"axios\";\n\nclass ShowTweets extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      searchResults: [],\n      searchResultsIsOpen: false,\n      sentiment: \"\",\n      date: \"\",\n      data: [],\n    };\n  }\n\n  // onchange\n  handleChange = (e) => {\n    if (e.target.name == \"date\") {\n      this.formatDate(e.target.value);\n    } else {\n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n\n  formatDate = (date) => {\n    var dateText = date.split(\"/\")[0];\n    this.setState({\n      date: dateText,\n    });\n    this.getTweetsByDate(date);\n  };\n\n  // get tweets\n  getTweetsByDate = (date) => {\n    axios\n      .post(`${Constants.FLASK_SERVER_ENDPOINT}/api/getTweetsByDate`, {\n        date: date,\n      })\n      .then((res) => {\n        this.setState({\n          data: res.data,\n        });\n      });\n  };\n\n  // search tweets\n  search = (e) => {\n    console.log(this.state.sentiment);\n    var value = e.target.value;\n    const recentTweetsKey = Object.keys(this.state.data.results)[\n      Object.keys(this.state.data.results).length - 1\n    ];\n    var tempTweets = this.state.data.results[recentTweetsKey];\n    var filteredData = [];\n    tempTweets\n      .slice(2, this.state.data.results[recentTweetsKey].length)\n      .map((val) => {\n        if (val.text !== undefined) {\n          if (\n            val.text.toLowerCase().indexOf(value.toLowerCase().trim()) !== -1 ||\n            val.screenName.toLowerCase().indexOf(value.toLowerCase().trim()) !==\n              -1 ||\n            val.prediction.toLowerCase().indexOf(value.toLowerCase().trim()) !==\n              -1 ||\n            val.prediction\n              .toLowerCase()\n              .indexOf(this.state.sentiment.toLowerCase().trim()) !== -1\n          ) {\n            filteredData.push(val);\n          }\n        }\n      });\n\n    if (value.trim() === \"\") {\n      this.setState({ searchResults: [], searchResultsIsOpen: false });\n    } else if (filteredData.length === 0)\n      this.setState({ searchResultsIsOpen: false });\n    this.setState({\n      searchResults: filteredData,\n      searchResultsIsOpen: true,\n    });\n  };\n\n  renderTable = (tableData) => {\n    return (\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>S.No</th>\n            <th>Username</th>\n            <th>Tweet</th>\n            <th>Sentiment</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tableData !== undefined\n            ? tableData.slice(2, 100).map((val, index) => {\n                return (\n                  <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td>{val.screenName}</td>\n                    <td>{val.text}</td>\n                    <td>{val.prediction}</td>\n                  </tr>\n                );\n              })\n            : null}\n        </tbody>\n      </Table>\n    );\n  };\n\n  //   Get the current Date\n  getDate = () => {\n    var today = new Date();\n    var month = (today.getMonth() + 1).toString();\n    var day = today.getDate().toString();\n    if (month.length == 1) {\n      month = \"0\" + month;\n    }\n    if (day.length == 1) {\n      day = \"0\" + day;\n    }\n    var date = today.getFullYear() + \"-\" + month + \"-\" + day;\n    this.setState({\n      date: date,\n    });\n\n    this.getTweetsByDate(date);\n  };\n  componentDidMount() {\n    this.getDate();\n  }\n  render() {\n    var recentTweetsKey;\n    if (this.state.data.results !== undefined) {\n      recentTweetsKey = Object.keys(this.state.data.results)[\n        Object.keys(this.state.data.results).length - 1\n      ];\n    }\n    return (\n      <div>\n        <div className=\"searchContainer\">\n          <h5 className=\"header-text\">Search Tweets</h5>\n          <Row className=\"searchWrapper border border-muted m-2\">\n            <Col md={3} className=\"pt-2\">\n              <Form.Label className=\"filter-label\">SELECT DATE</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"date\"\n                onChange={this.handleChange}\n              />\n            </Col>\n            <Col className=\"pt-2\">\n              <Form.Label className=\"filter-label\">SEARCH TWEETS</Form.Label>\n              <InputGroup className=\"mb-3\">\n                <FormControl\n                  placeholder=\"Search by hashtags and username\"\n                  onChange={this.search}\n                />\n              </InputGroup>\n            </Col>\n            <Col md={3} className=\"pt-2\">\n              <Form.Label className=\"filter-label\">FILTER BY</Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"sentiment\"\n                onChange={this.handleChange}\n              >\n                <option>----</option>\n                <option>Positive</option>\n                <option>Negative</option>\n                <option>Neutral</option>\n              </Form.Control>\n            </Col>\n            <Col md={1} className=\"searchButton\">\n              <Button variant=\"success\" className=\"searchButton\">\n                <FontAwesomeIcon icon={faSearch} />\n              </Button>\n            </Col>\n          </Row>\n          <hr />\n\n          <div className=\"mt-2 ml-2 mr-4\">\n            {this.state.data.results !== undefined &&\n            !this.state.searchResultsIsOpen\n              ? this.renderTable(this.state.data.results[recentTweetsKey])\n              : this.state.searchResultsIsOpen\n              ? this.renderTable(this.state.searchResults)\n              : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nShowTweets.contextType = Context;\nexport default ShowTweets;\n","import React from \"react\";\n\n// Chart\nimport { Line } from \"react-chartjs-2\";\n\n// Constants\nimport Constants from \"../../../../constants/Constants\";\n\n// Axios\nimport axios from \"axios\";\n// Boostrap\nimport { Row, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChartBar } from \"@fortawesome/free-solid-svg-icons\";\n\nclass History extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      overAllData: [],\n      labels: [],\n      sadness: [],\n      joy: [],\n      anger: [],\n      fear: [],\n      disgust: [],\n    };\n  }\n  componentDidMount() {\n    this.getAllData();\n  }\n\n  getAllData = () => {\n    axios\n      .get(`${Constants.FLASK_SERVER_ENDPOINT}/api/getAllTweets`)\n      .then((res) => {\n        this.setState({\n          overAllData: res.data,\n        });\n        this.renderData();\n      });\n  };\n\n  renderData = () => {\n    var labels = [];\n    var sadness = [];\n    var anger = [];\n    var joy = [];\n    var disgust = [];\n    var fear = [];\n    Object.keys(this.state.overAllData).map((val) => {\n      var data = this.state.overAllData;\n      labels.push(val);\n      sadness.push(data[val].sadness * 100).toFixed(0);\n      joy.push(data[val].joy * 100).toFixed(0);\n      anger.push(data[val].anger * 100).toFixed(0);\n      disgust.push(data[val].disgust * 100).toFixed(0);\n      fear.push(data[val].fear * 100).toFixed(0);\n    });\n\n    this.setState({\n      labels: labels,\n      sadness: sadness,\n      anger: anger,\n      joy: joy,\n      disgust: disgust,\n      fear: fear,\n    });\n  };\n  render() {\n    var sadnessData = {\n      labels: this.state.labels,\n      datasets: [\n        {\n          label: \"Sadness\",\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: \"rgba(211, 84, 0,0.4)\",\n          borderColor: \"rgba(211, 84, 0,1)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgba(211, 84, 0,1.0)\",\n          pointBackgroundColor: \"#fff\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgba(211, 84, 0,1.0)\",\n          pointHoverBorderColor: \"rgba(211, 84, 0,1.0)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: this.state.sadness,\n        },\n      ],\n    };\n    var joyData = {\n      labels: this.state.labels,\n      datasets: [\n        {\n          label: \"Joy\",\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: \"rgba(22, 160, 133,0.4)\",\n          borderColor: \"rgba(22, 160, 133,1.0)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgba(22, 160, 133,1.0)\",\n          pointBackgroundColor: \"#fff\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgba(22, 160, 133,1.0)\",\n          pointHoverBorderColor: \"rgba(22, 160, 133,1.0)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: this.state.joy,\n        },\n      ],\n    };\n    var angerData = {\n      labels: this.state.labels,\n      datasets: [\n        {\n          label: \"Anger\",\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: \"rgba(192, 57, 43,0.4)\",\n          borderColor: \"rgba(192, 57, 43,1.0)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgba(192, 57, 43,1.0)\",\n          pointBackgroundColor: \"#fff\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgba(192, 57, 43,1.0)\",\n          pointHoverBorderColor: \"rgba(192, 57, 43,1.0)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: this.state.anger,\n        },\n      ],\n    };\n    var disgustData = {\n      labels: this.state.labels,\n      datasets: [\n        {\n          label: \"Disgust\",\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: \"rgba(243, 156, 18,0.4)\",\n          borderColor: \"rgba(243, 156, 18,1.0)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgba(243, 156, 18,1.0)\",\n          pointBackgroundColor: \"#fff\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgba(243, 156, 18,1.0)\",\n          pointHoverBorderColor: \"rgba(243, 156, 18,1.0)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: this.state.disgust,\n        },\n      ],\n    };\n    var fearData = {\n      labels: this.state.labels,\n      datasets: [\n        {\n          label: \"Fear\",\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: \"rgba(41, 128, 185,0.4)\",\n          borderColor: \"rgba(41, 128, 185,1.0)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgba(41, 128, 185,1.0)\",\n          pointBackgroundColor: \"#fff\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgba(41, 128, 185,1.0)\",\n          pointHoverBorderColor: \"rgba(41, 128, 185,1.0)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: this.state.fear,\n        },\n      ],\n    };\n    return (\n      <div className=\"m-3 ml-4\">\n        <h5 className=\"header\">\n          <FontAwesomeIcon icon={faChartBar} className=\"mr-2\" />\n          OVERALL HISTORY\n        </h5>\n        <hr />\n        <Row>\n          <Col className=\"seperate-charts mr-4\" md={5}>\n            <Line data={sadnessData} />\n          </Col>\n          <Col className=\"seperate-charts mr-4\" md={5}>\n            <Line data={angerData} />\n          </Col>\n          <Col className=\"seperate-charts mr-4 mt-2\" md={5}>\n            <Line data={joyData} />\n          </Col>\n          <Col className=\"seperate-charts mr-4 mt-2\" md={5}>\n            <Line data={disgustData} />\n          </Col>\n          <Col className=\"seperate-charts mr-4 mt-2\" md={5}>\n            <Line data={fearData} />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\nexport default History;\n","import React from \"react\";\n\n// Style sheet\nimport \"./Home.css\";\n\n// Bootstarp components\nimport { Row, Col, Nav, Tab } from \"react-bootstrap\";\n\n// Stylesheets\nimport \"./Home.css\";\n\n// FontAwesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChartBar,\n  faInfoCircle,\n  faUserTie,\n  faSearch,\n  faBalanceScale,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Components\nimport Header from \"./components/Header/Header\";\n\n// Tabs\nimport OverView from \"./Tabs/Overview\";\nimport ShowTweets from \"./Tabs/ShowTweets\";\nimport History from \"./Tabs/History\";\n\n// Constants\nimport Constants from \"../../../constants/Constants\";\n\n// Axios\nimport axios from \"axios\";\n\n// Context\nimport Context from \"../../../context/Context\";\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      markerData: [],\n    };\n  }\n\n  // Get all today's tweets\n  getLiveTweets = () => {\n    var today = new Date();\n    // var month = (today.getMonth() + 1).toString();\n    // var day = today.getDate().toString();\n    var month = \"07\";\n    var day = \"5\";\n    if (month.length == 1) {\n      month = \"0\" + month;\n    }\n    if (day.length == 1) {\n      day = \"0\" + day;\n    }\n    var date = today.getFullYear() + \"-\" + month + \"-\" + day;\n    axios\n      .post(`${Constants.FLASK_SERVER_ENDPOINT}/api/getTweetsByDate`, {\n        date: date,\n      })\n      .then((res) => {\n        this.context.updateTodayTweets(res.data);\n        this.getCoordinatesForLocations();\n      });\n  };\n\n  getCoordinatesForLocations = () => {\n    var tempData = this.context.todayTweets.locations;\n    Object.keys(tempData).map((val) => {\n      axios\n        .post(`${Constants.FLASK_SERVER_ENDPOINT}/api/getCoordinates`, {\n          name: val,\n        })\n        .then((res) => {\n          if (res.data.Latitude !== undefined) {\n            tempData[val][\"position\"] = res.data;\n            this.setState({\n              markerData: tempData,\n            });\n            this.context.setMarkerData(tempData);\n          }\n        });\n    });\n  };\n  componentDidMount() {\n    // Get the tweets when the page is loaded\n    this.getLiveTweets();\n  }\n  render() {\n    return (\n      <div>\n        <Header />\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"overview\">\n          <div className=\"sidenav\">\n            <div className=\"sidenav-inner\">\n              <h5 className=\"mb-3\">NAVIGATION</h5>\n              <Nav variant=\"pills\" className=\"flex-column nav-links\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"overview\" className=\"inactive-link\">\n                    <FontAwesomeIcon\n                      icon={faInfoCircle}\n                      className=\"tabIcon mr-2\"\n                    />\n                    Overview\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"showTweets\" className=\"inactive-link\">\n                    <FontAwesomeIcon icon={faSearch} className=\"tabIcon mr-2\" />\n                    Search Tweets\n                  </Nav.Link>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"history\" className=\"inactive-link\">\n                      <FontAwesomeIcon\n                        icon={faChartBar}\n                        className=\"tabIcon mr-2\"\n                      />\n                      History\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"predict\" className=\"inactive-link\">\n                      <FontAwesomeIcon\n                        icon={faBalanceScale}\n                        className=\"tabIcon mr-2\"\n                      />\n                      Predict\n                    </Nav.Link>\n                  </Nav.Item>\n                </Nav.Item>\n              </Nav>\n            </div>\n          </div>\n          <div className=\"main-content\">\n            <Row>\n              <Col>\n                <Tab.Content>\n                  <Tab.Pane eventKey=\"overview\">\n                    <OverView />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"showTweets\">\n                    <ShowTweets />\n                  </Tab.Pane>\n                  <Tab.Pane eventKey=\"history\">\n                    <History />\n                  </Tab.Pane>\n                </Tab.Content>\n              </Col>\n            </Row>\n          </div>\n        </Tab.Container>\n      </div>\n    );\n  }\n}\nHome.contextType = Context;\nexport default Home;\n","import React from \"react\";\n\n// React Router\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Pages\nimport AdminLogin from \"./pages/Admin/Login/Login\";\nimport AdminHome from \"./pages/Admin/DashBoard/Home\";\n\n// Context\nimport Context from \"./context/Context\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todayTweets: {},\n      markerData: [],\n    };\n  }\n\n  // Function to update today's tweets\n  updateTodayTweets = (data) => {\n    this.setState({\n      todayTweets: data,\n    });\n  };\n\n  // Set marker data\n  setMarkerData = (data) => {\n    this.setState({\n      markerData: data,\n    });\n  };\n\n  // sleep function\n  sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  render() {\n    return (\n      <Context.Provider\n        value={{\n          ...this.state,\n          updateTodayTweets: this.updateTodayTweets,\n          setMarkerData: this.setMarkerData,\n          sleep: this.sleep,\n        }}\n      >\n        <div>\n          <Router>\n            <Switch>\n              <Route path=\"/adminLogin\" exact component={AdminLogin} />\n              <Route path=\"/admin/home\" exact component={AdminHome} />\n            </Switch>\n          </Router>\n        </div>\n      </Context.Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}